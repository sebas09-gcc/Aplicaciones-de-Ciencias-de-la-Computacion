Terminals unused in grammar

    LLAMADAFUNC
    IMPRIMIR
    SUMAR
    MULTIPLICAR
    RESTAR
    ASIGNAR
    COMPIGUAL
    COMPMAYOR
    COMPMENOR
    SALTARF
    SALTAR


Grammar

    0 $accept: start $end

    1 $@1: %empty

    2 start: $@1 programa

    3 $@2: %empty

    4 programa: DEF MAIN '(' PARDER '{' $@2 listainst '}'

    5 $@3: %empty

    6 programa: listadefinicionfuncion DEF MAIN '(' PARDER '{' $@3 listainst '}'

    7 listadefinicionfuncion: listadefinicionfuncion definicionfuncion
    8                       | definicionfuncion

    9 definicionfuncion: DEF ID '(' listaparams PARDER '{' listainst retorno ';' '}'

   10 retorno: RETURN expr

   11 listaparams: listaparams ',' ID
   12            | ID

   13 listainst: listainst instr
   14          | instr

   15 instr: asignacion ';'
   16      | seleccion
   17      | iteracion
   18      | impresion ';'

   19 @4: %empty

   20 impresion: IMPRIME '(' ID @4 PARDER

   21 @5: %empty

   22 asignacion: ID @5 IGUAL bloque_asigna

   23 bloque_asigna: expr
   24              | llamadafuncion

   25 @6: %empty

   26 llamadafuncion: ID @6 '(' listavalores PARDER

   27 listavalores: listavalores ',' expr
   28             | expr

   29 @7: %empty

   30 @8: %empty

   31 $@9: %empty

   32 iteracion: MIENTRAS '(' @7 condicion PARDER @8 bloque $@9

   33 @10: %empty

   34 seleccion: SI '(' condicion PARDER @10 bloque

   35 bloque: '{' listainst '}'
   36       | instr

   37 condicion: expr IGUAL expr
   38          | expr '<' expr
   39          | expr '>' expr

   40 expr: expr '+' term
   41     | expr '-' term
   42     | term

   43 term: term '*' factor
   44     | factor

   45 factor: NUMBER
   46       | ID
   47       | '(' expr ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 6 9 20 26 32 34 47
    ')' (41) 47
    '*' (42) 43
    '+' (43) 40
    ',' (44) 11 27
    '-' (45) 41
    ';' (59) 9 15 18
    '<' (60) 38
    '>' (62) 39
    '{' (123) 4 6 9 35
    '}' (125) 4 6 9 35
    error (256)
    SI (258) 34
    IGUAL (259) 22 37
    PARDER (260) 4 6 9 20 26 32 34
    DEF (261) 4 6 9
    MAIN (262) 4 6
    RETURN (263) 10
    LLAMADAFUNC (264)
    ID (265) 9 11 12 20 22 26 46
    NUMBER (266) 45
    MIENTRAS (267) 32
    IMPRIMIR (268)
    IMPRIME (269) 20
    SUMAR (270)
    MULTIPLICAR (271)
    RESTAR (272)
    ASIGNAR (273)
    COMPIGUAL (274)
    COMPMAYOR (275)
    COMPMENOR (276)
    SALTARF (277)
    SALTAR (278)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    start (36)
        on left: 2
        on right: 0
    $@1 (37)
        on left: 1
        on right: 2
    programa (38)
        on left: 4 6
        on right: 2
    $@2 (39)
        on left: 3
        on right: 4
    $@3 (40)
        on left: 5
        on right: 6
    listadefinicionfuncion (41)
        on left: 7 8
        on right: 6 7
    definicionfuncion (42)
        on left: 9
        on right: 7 8
    retorno (43)
        on left: 10
        on right: 9
    listaparams (44)
        on left: 11 12
        on right: 9 11
    listainst (45)
        on left: 13 14
        on right: 4 6 9 13 35
    instr (46)
        on left: 15 16 17 18
        on right: 13 14 36
    impresion (47)
        on left: 20
        on right: 18
    @4 (48)
        on left: 19
        on right: 20
    asignacion (49)
        on left: 22
        on right: 15
    @5 (50)
        on left: 21
        on right: 22
    bloque_asigna (51)
        on left: 23 24
        on right: 22
    llamadafuncion (52)
        on left: 26
        on right: 24
    @6 (53)
        on left: 25
        on right: 26
    listavalores (54)
        on left: 27 28
        on right: 26 27
    iteracion (55)
        on left: 32
        on right: 17
    @7 (56)
        on left: 29
        on right: 32
    @8 (57)
        on left: 30
        on right: 32
    $@9 (58)
        on left: 31
        on right: 32
    seleccion (59)
        on left: 34
        on right: 16
    @10 (60)
        on left: 33
        on right: 34
    bloque (61)
        on left: 35 36
        on right: 32 34
    condicion (62)
        on left: 37 38 39
        on right: 32 34
    expr (63)
        on left: 40 41 42
        on right: 10 23 27 28 37 38 39 40 41 47
    term (64)
        on left: 43 44
        on right: 40 41 42 43
    factor (65)
        on left: 45 46 47
        on right: 43 44


State 0

    0 $accept: . start $end

    $default  reduce using rule 1 ($@1)

    start  go to state 1
    $@1    go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    2 start: $@1 . programa

    DEF  shift, and go to state 4

    programa                go to state 5
    listadefinicionfuncion  go to state 6
    definicionfuncion       go to state 7


State 3

    0 $accept: start $end .

    $default  accept


State 4

    4 programa: DEF . MAIN '(' PARDER '{' $@2 listainst '}'
    9 definicionfuncion: DEF . ID '(' listaparams PARDER '{' listainst retorno ';' '}'

    MAIN  shift, and go to state 8
    ID    shift, and go to state 9


State 5

    2 start: $@1 programa .

    $default  reduce using rule 2 (start)


State 6

    6 programa: listadefinicionfuncion . DEF MAIN '(' PARDER '{' $@3 listainst '}'
    7 listadefinicionfuncion: listadefinicionfuncion . definicionfuncion

    DEF  shift, and go to state 10

    definicionfuncion  go to state 11


State 7

    8 listadefinicionfuncion: definicionfuncion .

    $default  reduce using rule 8 (listadefinicionfuncion)


State 8

    4 programa: DEF MAIN . '(' PARDER '{' $@2 listainst '}'

    '('  shift, and go to state 12


State 9

    9 definicionfuncion: DEF ID . '(' listaparams PARDER '{' listainst retorno ';' '}'

    '('  shift, and go to state 13


State 10

    6 programa: listadefinicionfuncion DEF . MAIN '(' PARDER '{' $@3 listainst '}'
    9 definicionfuncion: DEF . ID '(' listaparams PARDER '{' listainst retorno ';' '}'

    MAIN  shift, and go to state 14
    ID    shift, and go to state 9


State 11

    7 listadefinicionfuncion: listadefinicionfuncion definicionfuncion .

    $default  reduce using rule 7 (listadefinicionfuncion)


State 12

    4 programa: DEF MAIN '(' . PARDER '{' $@2 listainst '}'

    PARDER  shift, and go to state 15


State 13

    9 definicionfuncion: DEF ID '(' . listaparams PARDER '{' listainst retorno ';' '}'

    ID  shift, and go to state 16

    listaparams  go to state 17


State 14

    6 programa: listadefinicionfuncion DEF MAIN . '(' PARDER '{' $@3 listainst '}'

    '('  shift, and go to state 18


State 15

    4 programa: DEF MAIN '(' PARDER . '{' $@2 listainst '}'

    '{'  shift, and go to state 19


State 16

   12 listaparams: ID .

    $default  reduce using rule 12 (listaparams)


State 17

    9 definicionfuncion: DEF ID '(' listaparams . PARDER '{' listainst retorno ';' '}'
   11 listaparams: listaparams . ',' ID

    PARDER  shift, and go to state 20
    ','     shift, and go to state 21


State 18

    6 programa: listadefinicionfuncion DEF MAIN '(' . PARDER '{' $@3 listainst '}'

    PARDER  shift, and go to state 22


State 19

    4 programa: DEF MAIN '(' PARDER '{' . $@2 listainst '}'

    $default  reduce using rule 3 ($@2)

    $@2  go to state 23


State 20

    9 definicionfuncion: DEF ID '(' listaparams PARDER . '{' listainst retorno ';' '}'

    '{'  shift, and go to state 24


State 21

   11 listaparams: listaparams ',' . ID

    ID  shift, and go to state 25


State 22

    6 programa: listadefinicionfuncion DEF MAIN '(' PARDER . '{' $@3 listainst '}'

    '{'  shift, and go to state 26


State 23

    4 programa: DEF MAIN '(' PARDER '{' $@2 . listainst '}'

    SI        shift, and go to state 27
    ID        shift, and go to state 28
    MIENTRAS  shift, and go to state 29
    IMPRIME   shift, and go to state 30

    listainst   go to state 31
    instr       go to state 32
    impresion   go to state 33
    asignacion  go to state 34
    iteracion   go to state 35
    seleccion   go to state 36


State 24

    9 definicionfuncion: DEF ID '(' listaparams PARDER '{' . listainst retorno ';' '}'

    SI        shift, and go to state 27
    ID        shift, and go to state 28
    MIENTRAS  shift, and go to state 29
    IMPRIME   shift, and go to state 30

    listainst   go to state 37
    instr       go to state 32
    impresion   go to state 33
    asignacion  go to state 34
    iteracion   go to state 35
    seleccion   go to state 36


State 25

   11 listaparams: listaparams ',' ID .

    $default  reduce using rule 11 (listaparams)


State 26

    6 programa: listadefinicionfuncion DEF MAIN '(' PARDER '{' . $@3 listainst '}'

    $default  reduce using rule 5 ($@3)

    $@3  go to state 38


State 27

   34 seleccion: SI . '(' condicion PARDER @10 bloque

    '('  shift, and go to state 39


State 28

   22 asignacion: ID . @5 IGUAL bloque_asigna

    $default  reduce using rule 21 (@5)

    @5  go to state 40


State 29

   32 iteracion: MIENTRAS . '(' @7 condicion PARDER @8 bloque $@9

    '('  shift, and go to state 41


State 30

   20 impresion: IMPRIME . '(' ID @4 PARDER

    '('  shift, and go to state 42


State 31

    4 programa: DEF MAIN '(' PARDER '{' $@2 listainst . '}'
   13 listainst: listainst . instr

    SI        shift, and go to state 27
    ID        shift, and go to state 28
    MIENTRAS  shift, and go to state 29
    IMPRIME   shift, and go to state 30
    '}'       shift, and go to state 43

    instr       go to state 44
    impresion   go to state 33
    asignacion  go to state 34
    iteracion   go to state 35
    seleccion   go to state 36


State 32

   14 listainst: instr .

    $default  reduce using rule 14 (listainst)


State 33

   18 instr: impresion . ';'

    ';'  shift, and go to state 45


State 34

   15 instr: asignacion . ';'

    ';'  shift, and go to state 46


State 35

   17 instr: iteracion .

    $default  reduce using rule 17 (instr)


State 36

   16 instr: seleccion .

    $default  reduce using rule 16 (instr)


State 37

    9 definicionfuncion: DEF ID '(' listaparams PARDER '{' listainst . retorno ';' '}'
   13 listainst: listainst . instr

    SI        shift, and go to state 27
    RETURN    shift, and go to state 47
    ID        shift, and go to state 28
    MIENTRAS  shift, and go to state 29
    IMPRIME   shift, and go to state 30

    retorno     go to state 48
    instr       go to state 44
    impresion   go to state 33
    asignacion  go to state 34
    iteracion   go to state 35
    seleccion   go to state 36


State 38

    6 programa: listadefinicionfuncion DEF MAIN '(' PARDER '{' $@3 . listainst '}'

    SI        shift, and go to state 27
    ID        shift, and go to state 28
    MIENTRAS  shift, and go to state 29
    IMPRIME   shift, and go to state 30

    listainst   go to state 49
    instr       go to state 32
    impresion   go to state 33
    asignacion  go to state 34
    iteracion   go to state 35
    seleccion   go to state 36


State 39

   34 seleccion: SI '(' . condicion PARDER @10 bloque

    ID      shift, and go to state 50
    NUMBER  shift, and go to state 51
    '('     shift, and go to state 52

    condicion  go to state 53
    expr       go to state 54
    term       go to state 55
    factor     go to state 56


State 40

   22 asignacion: ID @5 . IGUAL bloque_asigna

    IGUAL  shift, and go to state 57


State 41

   32 iteracion: MIENTRAS '(' . @7 condicion PARDER @8 bloque $@9

    $default  reduce using rule 29 (@7)

    @7  go to state 58


State 42

   20 impresion: IMPRIME '(' . ID @4 PARDER

    ID  shift, and go to state 59


State 43

    4 programa: DEF MAIN '(' PARDER '{' $@2 listainst '}' .

    $default  reduce using rule 4 (programa)


State 44

   13 listainst: listainst instr .

    $default  reduce using rule 13 (listainst)


State 45

   18 instr: impresion ';' .

    $default  reduce using rule 18 (instr)


State 46

   15 instr: asignacion ';' .

    $default  reduce using rule 15 (instr)


State 47

   10 retorno: RETURN . expr

    ID      shift, and go to state 50
    NUMBER  shift, and go to state 51
    '('     shift, and go to state 52

    expr    go to state 60
    term    go to state 55
    factor  go to state 56


State 48

    9 definicionfuncion: DEF ID '(' listaparams PARDER '{' listainst retorno . ';' '}'

    ';'  shift, and go to state 61


State 49

    6 programa: listadefinicionfuncion DEF MAIN '(' PARDER '{' $@3 listainst . '}'
   13 listainst: listainst . instr

    SI        shift, and go to state 27
    ID        shift, and go to state 28
    MIENTRAS  shift, and go to state 29
    IMPRIME   shift, and go to state 30
    '}'       shift, and go to state 62

    instr       go to state 44
    impresion   go to state 33
    asignacion  go to state 34
    iteracion   go to state 35
    seleccion   go to state 36


State 50

   46 factor: ID .

    $default  reduce using rule 46 (factor)


State 51

   45 factor: NUMBER .

    $default  reduce using rule 45 (factor)


State 52

   47 factor: '(' . expr ')'

    ID      shift, and go to state 50
    NUMBER  shift, and go to state 51
    '('     shift, and go to state 52

    expr    go to state 63
    term    go to state 55
    factor  go to state 56


State 53

   34 seleccion: SI '(' condicion . PARDER @10 bloque

    PARDER  shift, and go to state 64


State 54

   37 condicion: expr . IGUAL expr
   38          | expr . '<' expr
   39          | expr . '>' expr
   40 expr: expr . '+' term
   41     | expr . '-' term

    IGUAL  shift, and go to state 65
    '<'    shift, and go to state 66
    '>'    shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69


State 55

   42 expr: term .
   43 term: term . '*' factor

    '*'  shift, and go to state 70

    $default  reduce using rule 42 (expr)


State 56

   44 term: factor .

    $default  reduce using rule 44 (term)


State 57

   22 asignacion: ID @5 IGUAL . bloque_asigna

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 51
    '('     shift, and go to state 52

    bloque_asigna   go to state 72
    llamadafuncion  go to state 73
    expr            go to state 74
    term            go to state 55
    factor          go to state 56


State 58

   32 iteracion: MIENTRAS '(' @7 . condicion PARDER @8 bloque $@9

    ID      shift, and go to state 50
    NUMBER  shift, and go to state 51
    '('     shift, and go to state 52

    condicion  go to state 75
    expr       go to state 54
    term       go to state 55
    factor     go to state 56


State 59

   20 impresion: IMPRIME '(' ID . @4 PARDER

    $default  reduce using rule 19 (@4)

    @4  go to state 76


State 60

   10 retorno: RETURN expr .
   40 expr: expr . '+' term
   41     | expr . '-' term

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 10 (retorno)


State 61

    9 definicionfuncion: DEF ID '(' listaparams PARDER '{' listainst retorno ';' . '}'

    '}'  shift, and go to state 77


State 62

    6 programa: listadefinicionfuncion DEF MAIN '(' PARDER '{' $@3 listainst '}' .

    $default  reduce using rule 6 (programa)


State 63

   40 expr: expr . '+' term
   41     | expr . '-' term
   47 factor: '(' expr . ')'

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    ')'  shift, and go to state 78


State 64

   34 seleccion: SI '(' condicion PARDER . @10 bloque

    $default  reduce using rule 33 (@10)

    @10  go to state 79


State 65

   37 condicion: expr IGUAL . expr

    ID      shift, and go to state 50
    NUMBER  shift, and go to state 51
    '('     shift, and go to state 52

    expr    go to state 80
    term    go to state 55
    factor  go to state 56


State 66

   38 condicion: expr '<' . expr

    ID      shift, and go to state 50
    NUMBER  shift, and go to state 51
    '('     shift, and go to state 52

    expr    go to state 81
    term    go to state 55
    factor  go to state 56


State 67

   39 condicion: expr '>' . expr

    ID      shift, and go to state 50
    NUMBER  shift, and go to state 51
    '('     shift, and go to state 52

    expr    go to state 82
    term    go to state 55
    factor  go to state 56


State 68

   40 expr: expr '+' . term

    ID      shift, and go to state 50
    NUMBER  shift, and go to state 51
    '('     shift, and go to state 52

    term    go to state 83
    factor  go to state 56


State 69

   41 expr: expr '-' . term

    ID      shift, and go to state 50
    NUMBER  shift, and go to state 51
    '('     shift, and go to state 52

    term    go to state 84
    factor  go to state 56


State 70

   43 term: term '*' . factor

    ID      shift, and go to state 50
    NUMBER  shift, and go to state 51
    '('     shift, and go to state 52

    factor  go to state 85


State 71

   26 llamadafuncion: ID . @6 '(' listavalores PARDER
   46 factor: ID .

    '('       reduce using rule 25 (@6)
    $default  reduce using rule 46 (factor)

    @6  go to state 86


State 72

   22 asignacion: ID @5 IGUAL bloque_asigna .

    $default  reduce using rule 22 (asignacion)


State 73

   24 bloque_asigna: llamadafuncion .

    $default  reduce using rule 24 (bloque_asigna)


State 74

   23 bloque_asigna: expr .
   40 expr: expr . '+' term
   41     | expr . '-' term

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 23 (bloque_asigna)


State 75

   32 iteracion: MIENTRAS '(' @7 condicion . PARDER @8 bloque $@9

    PARDER  shift, and go to state 87


State 76

   20 impresion: IMPRIME '(' ID @4 . PARDER

    PARDER  shift, and go to state 88


State 77

    9 definicionfuncion: DEF ID '(' listaparams PARDER '{' listainst retorno ';' '}' .

    $default  reduce using rule 9 (definicionfuncion)


State 78

   47 factor: '(' expr ')' .

    $default  reduce using rule 47 (factor)


State 79

   34 seleccion: SI '(' condicion PARDER @10 . bloque

    SI        shift, and go to state 27
    ID        shift, and go to state 28
    MIENTRAS  shift, and go to state 29
    IMPRIME   shift, and go to state 30
    '{'       shift, and go to state 89

    instr       go to state 90
    impresion   go to state 33
    asignacion  go to state 34
    iteracion   go to state 35
    seleccion   go to state 36
    bloque      go to state 91


State 80

   37 condicion: expr IGUAL expr .
   40 expr: expr . '+' term
   41     | expr . '-' term

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 37 (condicion)


State 81

   38 condicion: expr '<' expr .
   40 expr: expr . '+' term
   41     | expr . '-' term

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 38 (condicion)


State 82

   39 condicion: expr '>' expr .
   40 expr: expr . '+' term
   41     | expr . '-' term

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 39 (condicion)


State 83

   40 expr: expr '+' term .
   43 term: term . '*' factor

    '*'  shift, and go to state 70

    $default  reduce using rule 40 (expr)


State 84

   41 expr: expr '-' term .
   43 term: term . '*' factor

    '*'  shift, and go to state 70

    $default  reduce using rule 41 (expr)


State 85

   43 term: term '*' factor .

    $default  reduce using rule 43 (term)


State 86

   26 llamadafuncion: ID @6 . '(' listavalores PARDER

    '('  shift, and go to state 92


State 87

   32 iteracion: MIENTRAS '(' @7 condicion PARDER . @8 bloque $@9

    $default  reduce using rule 30 (@8)

    @8  go to state 93


State 88

   20 impresion: IMPRIME '(' ID @4 PARDER .

    $default  reduce using rule 20 (impresion)


State 89

   35 bloque: '{' . listainst '}'

    SI        shift, and go to state 27
    ID        shift, and go to state 28
    MIENTRAS  shift, and go to state 29
    IMPRIME   shift, and go to state 30

    listainst   go to state 94
    instr       go to state 32
    impresion   go to state 33
    asignacion  go to state 34
    iteracion   go to state 35
    seleccion   go to state 36


State 90

   36 bloque: instr .

    $default  reduce using rule 36 (bloque)


State 91

   34 seleccion: SI '(' condicion PARDER @10 bloque .

    $default  reduce using rule 34 (seleccion)


State 92

   26 llamadafuncion: ID @6 '(' . listavalores PARDER

    ID      shift, and go to state 50
    NUMBER  shift, and go to state 51
    '('     shift, and go to state 52

    listavalores  go to state 95
    expr          go to state 96
    term          go to state 55
    factor        go to state 56


State 93

   32 iteracion: MIENTRAS '(' @7 condicion PARDER @8 . bloque $@9

    SI        shift, and go to state 27
    ID        shift, and go to state 28
    MIENTRAS  shift, and go to state 29
    IMPRIME   shift, and go to state 30
    '{'       shift, and go to state 89

    instr       go to state 90
    impresion   go to state 33
    asignacion  go to state 34
    iteracion   go to state 35
    seleccion   go to state 36
    bloque      go to state 97


State 94

   13 listainst: listainst . instr
   35 bloque: '{' listainst . '}'

    SI        shift, and go to state 27
    ID        shift, and go to state 28
    MIENTRAS  shift, and go to state 29
    IMPRIME   shift, and go to state 30
    '}'       shift, and go to state 98

    instr       go to state 44
    impresion   go to state 33
    asignacion  go to state 34
    iteracion   go to state 35
    seleccion   go to state 36


State 95

   26 llamadafuncion: ID @6 '(' listavalores . PARDER
   27 listavalores: listavalores . ',' expr

    PARDER  shift, and go to state 99
    ','     shift, and go to state 100


State 96

   28 listavalores: expr .
   40 expr: expr . '+' term
   41     | expr . '-' term

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 28 (listavalores)


State 97

   32 iteracion: MIENTRAS '(' @7 condicion PARDER @8 bloque . $@9

    $default  reduce using rule 31 ($@9)

    $@9  go to state 101


State 98

   35 bloque: '{' listainst '}' .

    $default  reduce using rule 35 (bloque)


State 99

   26 llamadafuncion: ID @6 '(' listavalores PARDER .

    $default  reduce using rule 26 (llamadafuncion)


State 100

   27 listavalores: listavalores ',' . expr

    ID      shift, and go to state 50
    NUMBER  shift, and go to state 51
    '('     shift, and go to state 52

    expr    go to state 102
    term    go to state 55
    factor  go to state 56


State 101

   32 iteracion: MIENTRAS '(' @7 condicion PARDER @8 bloque $@9 .

    $default  reduce using rule 32 (iteracion)


State 102

   27 listavalores: listavalores ',' expr .
   40 expr: expr . '+' term
   41     | expr . '-' term

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 27 (listavalores)
